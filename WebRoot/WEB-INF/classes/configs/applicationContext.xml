<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>WEB-INF/classes/configs/config.properties</value>
			</list>
		</property>
	</bean>

	<!-- Local C3P0 DataSource that works in any environment -->
	<!-- See JPetStore for an example of using Apache Commons DBCP as alternative -->
	<!-- (Both DataSource implementations have a "close" method to be called on shutdown) -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<!-- valid values are 'create','update','create-drop','validate' -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="configLocations">
			<list>
				<value>WEB-INF/classes/configs/hibernate.cfg.xml</value>
			</list>
		</property>
	</bean>
	<bean id="commondao"
		class="com.wootion.idp.persistence.dao.CommonDaoHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- service manager 本处采用继承的方式进行事务管理，且只限定对服务层的(接口处)事务管理，其他服务层应该继承该bean-->
	<bean id="txProxyTemplate" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="modify*">PROPAGATION_REQUIRED</prop>
				<prop key="submit*">PROPAGATION_REQUIRED</prop>
				<prop key="audit*">PROPAGATION_REQUIRED</prop>
				<prop key="reject*">PROPAGATION_REQUIRED</prop>
				<prop key="back*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="commonservice" parent="txProxyTemplate">
		<property name="target">
			<bean
				class="com.wootion.idp.service.CommonServiceImpl">
				<property name="commondao" ref="commondao" />
			</bean>
		</property>
	</bean>

	<!-- 用户管理bean配置 -->
	<bean id="usermanagerdao"
		class="com.wootion.idp.persistence.dao.user.UserManagerDAOHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="usermanagerservice" parent="txProxyTemplate">
		<property name="target">
			<bean
				class="com.wootion.idp.service.user.UserManagerServiceImpl">
				<property name="commonDao" ref="commondao" />
				<property name="managerDAO" ref="usermanagerdao" />
			</bean>
		</property>
	</bean>
	<!-- 角色管理bean配置 -->
	<bean id="rolemanagedao"
		class="com.wootion.idp.persistence.dao.role.RoleManagerDAOHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="roleDAO"
		class="com.wootion.idp.persistence.dao.role.RoleDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="rolemanageservice" parent="txProxyTemplate">
		<property name="target">
			<bean
				class="com.wootion.idp.service.role.RoleManagerServiceImpl">
				<property name="commonDao" ref="commondao" />
				<property name="managerDAO" ref="rolemanagedao" />
				<property name="userDAO" ref="usermanagerdao" />
				<property name="roleDAO" ref="roleDAO" />
			</bean>
		</property>
	</bean>
	<!-- 功能管理bean配置 -->
	<bean id="functionmanagerdao"
		class="com.wootion.idp.persistence.dao.function.FunctionManagerDAOHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="functionmanagerservice" parent="txProxyTemplate">
		<property name="target">
			<bean
				class="com.wootion.idp.service.function.FunctionManagerServiceImpl">
				<property name="commonDao" ref="commondao" />
				<property name="managerDAO" ref="functionmanagerdao" />
			</bean>
		</property>
	</bean>
	<!-- 资源管理bean配置 -->
	<bean id="resourcemanagerdao"
		class="com.wootion.idp.persistence.dao.resource.ResourcesManagerDAOHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="resourcemanageservice" parent="txProxyTemplate">
		<property name="target">
			<bean
				class="com.wootion.idp.service.resource.ResourceManagerServiceImpl">
				<property name="commonDao" ref="commondao" />
				<property name="managerDAO" ref="resourcemanagerdao" />
			</bean>
		</property>
	</bean>

</beans>